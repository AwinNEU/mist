log-search = {
  path = "./examples/target/scala-2.11/mist_examples_2.11-0.8.0.jar"
  className = "SimpleTextSearch$"
  namespace = "foo"
}

streaming-log-search = {
  path = "./examples/target/scala-2.11/mist_examples_2.11-0.8.0.jar"
  className = "StreamingTextSearch$"
  namespace = "streaming"
}

classification = {
  path = "./examples/target/scala-2.11/mist_examples_2.11-0.8.0.jar"
  className = "MLClassification$"
  namespace = "regression"
}

simple-context = {
  path = "./examples/target/scala-2.11/mist_examples_2.11-0.8.0.jar"
  className = "SimpleContext$"
  namespace = "foo"
}

simple-context-py = {
  path = "./examples/src/main/python/simple_context.py"
  className = "SimpleContext"
  namespace = "foo"
}

dtree {
  path = "./examples/target/scala-2.11/mist_examples_2.11-0.8.0.jar"
  className = "DTreeClassificationJob$"
  namespace = "DTree"
}

regression {
  path = "./examples/target/scala-2.11/mist_examples_2.11-0.8.0.jar"
  className = "MLClassification$"
  namespace = "Perceptron"
}

random_forest {
  path = "./examples/target/scala-2.11/mist_examples_2.11-0.8.0.jar"
  className = "RandomForestClassificationJob$"
  namespace = "RandomForest"
}

 binarizer {
   path = "./examples/target/scala-2.11/mist_examples_2.11-0.8.0.jar"
   className = "BinarizerJob$"
   namespace = "Binarizer"
 }

pca {
  path = "./examples/target/scala-2.11/mist_examples_2.11-0.8.0.jar"
  className = "PCAJob$"
  namespace = "PCA"
}

minmaxscaler {
  path = "./examples/target/scala-2.11/mist_examples_2.11-0.8.0.jar"
  className = "MinMaxScalerJob$"
  namespace = "MinMaxScaler"
}

standardscaler {
  path = "./examples/target/scala-2.11/mist_examples_2.11-0.8.0.jar"
  className = "StandardScalerJob$"
  namespace = "StandardScaler"
}

maxabsscaler {
  path = "./examples/target/scala-2.11/mist_examples_2.11-0.8.0.jar"
  className = "MaxAbsScalerJob$"
  namespace = "MaxAbsScaler"
}

stringindexer {
  path = "./examples/target/scala-2.11/mist_examples_2.11-0.8.0.jar"
  className = "StringIndexerJob$"
  namespace = "StringIndexer"
}