log-search = {
  path = "./examples-spark2/target/scala-2.11/mist-examples-spark2_2.11-0.9.0.jar"
  className = "SimpleTextSearch$"
  namespace = "foo"
}

hive-test = {
  path = "./examples-spark2/target/scala-2.11/mist-examples-spark2_2.11-0.9.0.jar"
  className = "SimpleHiveContext$"
  namespace = "foo"
}

streaming-log-search = {
  path = "./examples-spark2/target/scala-2.11/mist-examples-spark2_2.11-0.9.0.jar"
  className = "StreamingTextSearch$"
  namespace = "streaming"
}

classification = {
  path =  "./examples-spark2/target/scala-2.11/mist-examples-spark2_2.11-0.9.0.jar"
  className = "MLClassification$"
  namespace = "regression"
}

simple-context = {
  path =  "./examples-spark2/target/scala-2.11/mist-examples-spark2_2.11-0.9.0.jar"
  className = "SimpleContext$"
  namespace = "foo"
}

simple-context-py = {
  path = "./examples-python/simple_context.py"
  className = "SimpleContext"
  namespace = "foo"
}

simple-streaming-py = {
  path = "./examples-python/simple_streaming.py"
  className = "SimpleStreaming"
  namespace = "foo"
}

dtree {
  path = "./examples-spark2/target/scala-2.11/mist-examples-spark2_2.11-0.9.0.jar"
  className = "DTreeClassificationJob$"
  namespace = "DTree"
}

regression {
  path = "./examples-spark2/target/scala-2.11/mist-examples-spark2_2.11-0.9.0.jar"
  className = "MLClassification$"
  namespace = "Perceptron"
}

random_forest {
  path = "./examples-spark2/target/scala-2.11/mist-examples-spark2_2.11-0.9.0.jar"
  className = "RandomForestClassificationJob$"
  namespace = "RandomForest"
}

binarizer {
  path =  "./examples-spark2/target/scala-2.11/mist-examples-spark2_2.11-0.9.0.jar"
  className = "BinarizerJob$"
  namespace = "Binarizer"
}

pca {
  path = "./examples-spark2/target/scala-2.11/mist-examples-spark2_2.11-0.9.0.jar"
  className = "PCAJob$"
  namespace = "PCA"
}

minmaxscaler {
  path = "./examples-spark2/target/scala-2.11/mist-examples-spark2_2.11-0.9.0.jar"
  className = "MinMaxScalerJob$"
  namespace = "MinMaxScaler"
}

standardscaler {
  path = "./examples-spark2/target/scala-2.11/mist-examples-spark2_2.11-0.9.0.jar"
  className = "StandardScalerJob$"
  namespace = "StandardScaler"
}

maxabsscaler {
  path = "./examples-spark2/target/scala-2.11/mist-examples-spark2_2.11-0.9.0.jar"
  className = "MaxAbsScalerJob$"
  namespace = "MaxAbsScaler"
}

stringindexer {
  path = "./examples-spark2/target/scala-2.11/mist-examples-spark2_2.11-0.9.0.jar"
  className = "StringIndexerJob$"
  namespace = "StringIndexer"
}

onehotencoder {
  path = "./examples-spark2/target/scala-2.11/mist-examples-spark2_2.11-0.9.0.jar"
  className = "OneHotEncoderJob$"
  namespace = "OneHotEncoder"
}

ngrams {
  path = "./examples-spark2/target/scala-2.11/mist-examples-spark2_2.11-0.9.0.jar"
  className = "NgramJob$"
  namespace = "Ngram"
}

stop-words-remover {
  path = "./examples-spark2/target/scala-2.11/mist-examples-spark2_2.11-0.9.0.jar"
  className = "StopWordsRemoverJob$"
  namespace = "StopWordsRemover"
}

normalizer {
  path = "./examples-spark2/target/scala-2.11/mist-examples-spark2_2.11-0.9.0.jar"
  className = "NormalizerJob$"
  namespace = "Normalizer"
}

polynomial-expansion {
  path = "./examples-spark2/target/scala-2.11/mist-examples-spark2_2.11-0.9.0.jar"
  className = "PolynomialExpansionJob$"
  namespace = "PolynomialExpansion"
}

dct {
  path = "./examples-spark2/target/scala-2.11/mist-examples-spark2_2.11-0.9.0.jar"
  className = "DCTJob$"
  namespace = "DCT"
}
